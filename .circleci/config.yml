version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.4

jobs:
  test_job: # name of your job
    docker:
      - image: circleci/golang:1.16
    executor: aws-cli/default
    working_directory: ~/project
    steps:                          
      - attach_workspace:
          at: .
      - checkout
      - run:
          name: Install TF
          command: curl -L -s https://releases.hashicorp.com/terraform/1.3.3/terraform_1.3.3_linux_amd64.zip -o /go/bin/terraform.zip && unzip /go/bin/terraform.zip -d /go/bin && chmod +x /go/bin/terraform
      - aws-cli/setup:
          aws-access-key-id: aws_access_key_id
          aws-secret-access-key: aws_secret_access_key
          aws-region: region
      - run:
          name: check versions of things
          command: go version; python3 --version; terraform version; aws --version
      - run:
          name: check aws caller
          command: aws sts get-caller-identity
      - run:
          name: Init go mod
          command: cd test; go mod init blindtest; go mod tidy
      - run:
          name: Blind Test
          command: cd test; go test -v

  apply_infrastructure:
    parameters:
      environment: 
        type: string
        default: dev
    docker:
      - image: circleci/golang:1.16
    executor: aws-cli/default
    working_directory: ~/project
    steps:                          
      - attach_workspace:
          at: .
      - checkout
      - run:
          name: Install TF
          command: curl -L -s https://releases.hashicorp.com/terraform/1.3.3/terraform_1.3.3_linux_amd64.zip -o /go/bin/terraform.zip && unzip /go/bin/terraform.zip -d /go/bin && chmod +x /go/bin/terraform
      - aws-cli/setup:
          aws-access-key-id: aws_access_key_id
          aws-secret-access-key: aws_secret_access_key
          aws-region: region
      - run:
          name: check versions of things
          command: go version; python3 --version; terraform version; aws --version
      - run:
          name: check aws caller
          command: aws sts get-caller-identity
      - run:
          name: Init
          command: ccd scripts; bash init.sh << parameters.environment >>
      - run:
          name: Plan
          command: cd scripts; bash plan.sh << parameters.environment >>
      - run:
          name: Apply
          command: cd scripts; bash apply.sh << parameters.environment >>
      - persist_to_workspace:
            root: .               
            paths:
              - .     

  destroy_infrastructure: # name of your job
    parameters:
      environment: 
        type: string
        default: dev
    docker:
      - image: circleci/golang:1.16
    executor: aws-cli/default
    working_directory: ~/project
    steps:                          
      - attach_workspace:
          at: .
      - checkout
      - run:
          name: Check files
          command: cd src; ls -l
      - run:
          name: Install TF
          command: curl -L -s https://releases.hashicorp.com/terraform/1.3.3/terraform_1.3.3_linux_amd64.zip -o /go/bin/terraform.zip && unzip /go/bin/terraform.zip -d /go/bin && chmod +x /go/bin/terraform
      - aws-cli/setup:
          aws-access-key-id: aws_access_key_id
          aws-secret-access-key: aws_secret_access_key
          aws-region: region
      - run:
          name: Init
          command: cd Terraform; terraform init
      - run:
          name: Destroy
          command: cd Terraform; terraform destroy -auto-approve         


workflows:
  test_workflow:
    jobs:
      - test_job:
          filters:
            branches:
              only:
                - /^ops\/.*/
                - /^dev\/.*/

  stage_workflow:
    jobs:
      - apply_infrastructure:
          environment: dev
          filters:
            branches:
              only: develop
      - hold:
          name: Destroy-Approval
          type: approval
          requires:
            - apply_infrastructure
      - destroy_infrastructure:
          environment: dev
          requires:
            - Destroy-Approval

